@namespace "PageBaseMixin";

@st-import PageBase from "./page-base.st.css";
@st-import Link from "../components/content/content-blocks/link/link.st.css";
@st-import CodeBlock from "../components/content/content-blocks/code-block/code-block.st.css";
@st-import CustomImage from "../components/content/content-blocks/custom-image/custom-image.st.css";
@st-import Figure from "../components/content/content-blocks/figure/figure.st.css";

:vars {
	LinkColor: #808080;
	LinkColor_Hover: #000000;
	TopicTextColor: #000000;
	TitleTextColor: #000000;
	SubtitleTextColor: #000000;
	ParagraphTextColor: #000000;
	InlineCodeBgColor: #f0f0f0;
	InlineCodeBorderColor: #c0c0c0;
	SectionBoxShadowColor: rgba(0, 0, 0, 0.5);
	ContentHeaderMetaBorderColor: #c0c0c0;
	ImageBorderColor: #000000;
}

@st-import [
	h3,

	SectionBox,
	Topic,
	Title,
	Subtitle,
	Paragraph,
	Blockquote,
	InlineCode,
	CodeBlockStyle,

	ParagraphMargin,
	SubtitleMargin1,
	SubtitleMargin2,

	ListBullet,
	BlockQuoteBorder,
] from "../theme/common/typography.st.css";

.root {
	-st-extends: PageBase;
}

.root::section {
	-st-mixin: SectionBox;
	box-shadow: 0 0 10px value(SectionBoxShadowColor);
}

.root::topic {
	-st-mixin: Topic;
	color: value(TopicTextColor);
}

.root::title,
.root::contentComponent:type(heading_1) {
	-st-mixin: Title;
	color: value(TitleTextColor);
}

.root::subtitle,
.root::contentComponent:type(heading_2) {
	-st-mixin: Subtitle;
	color: value(SubtitleTextColor);
}

.root::contentComponent:type(heading_2) {
	-st-mixin: SubtitleMargin1;
}

.root::contentComponent:type(heading_3) {
	-st-mixin: h3, SubtitleMargin2;
}

.root::paragraph,
.root::contentComponent:type(paragraph) {
	-st-mixin: Paragraph, ParagraphMargin;
	color: value(ParagraphTextColor);
}

.root::contentComponent:type(blockquote) {
	-st-mixin: Blockquote;
	color: value(ParagraphTextColor);
	border-left: value(BlockQuoteBorder);
}
.root:textDirection(rtl)::contentComponent:type(blockquote) {
	border-left: none;
	border-right: value(BlockQuoteBorder);
}

.root::contentComponent:listType(ul),
.root::contentComponent:listType(ol) {
	-st-mixin: ListBullet;
	color: value(ParagraphTextColor);
}
.root::contentComponent:type(list-item)  {
	-st-mixin: Paragraph, ParagraphMargin;
	color: value(ParagraphTextColor);
}

.root Link,
.root::link,
.root::link:visited,
.root::contentComponent:type(link) {
	color: value(LinkColor);
}
.root Link:hover,
.root::link:hover,
.root::contentComponent:type(link):hover {
	color: value(LinkColor_Hover);
}

.root code,
.root::contentComponent:type(code) {
	-st-mixin: InlineCode;
	font-family: monospace;
	background-color: value(InlineCodeBgColor);
	border-color: value(InlineCodeBorderColor);
	font-size: 0.8rem;
	font-weight: 500;
	color: #000;
}
.root CodeBlock::pre {
	-st-mixin: CodeBlockStyle;
	background: value(InlineCodeBgColor);
	padding: 1rem;
}
.root CodeBlock::code {
	background: none;
	border: none;
	background: none;
	padding: 0;
	border-radius: 0;
}

.root::contentComponent:type(figure) {
	border: 1px solid value(ImageBorderColor);
	padding: 2rem 0;
	box-sizing: border-box;
	margin: 2rem 0;
}














/* Docs */
.root::abstract {
	/* -st-mixin: heading3(
		h3_color value(HeadingColor3)
	); */
}
.root::meta {
	/* font-size: 1.041vmax; */
	/* color: value(HeadingColor2); */
	margin: 1.302vmax 0 0;
	border-color: value(ContentHeaderMetaBorderColor);
	/* -st-mixin: TextNode(
		TextSize 1.041vmax,
		TextColor value(HeadingColor2)
	); */
}
.root::byline {
	-st-mixin: Paragraph;
	text-transform: uppercase;
}
.root::date {
	-st-mixin: Paragraph;
}

.credits {
}

.root::moto {
	-st-mixin: Paragraph;
	margin-bottom: 4rem;
	font-style: italic;
	/* COLOR */
	color: value(ParagraphTextColor);
}
