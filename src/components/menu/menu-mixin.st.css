@namespace "Menu";

@st-import Menu from "./menu.st.css";
@st-import ButtonMixin from "../ui/button/button-mixin.st.css";

:vars {
	ListBgColor: transparent;
	ArrowColor: #fff;
	ViewPortBgColor: #fff;
	TriggerPadding: 0 6px;
	TriggerLabelLineHeight: auto;
	TriggerTextSize: inherit;
	TriggerRadius: 6px;
	TriggerBgColorHover: #c0c0c0;
	TriggerTextColor: inherit;
	TriggerTextColor_Hover: inherit;
	ItemTextColor: inherit;
	ItemTextColor_Hover: inherit;
	ItemPadding: 1rem;
	ItemRadius: 6px;
	ItemBgColor_Hover: inherit;
	ItemLabelTextColor: inherit;
	ItemLabelTextColor_Hover: inherit;
	ItemLabelTextSize: inherit;
	ItemLabelLineHeight: inherit;
	ItemLabelTextWeight: inherit;
	ItemSubtitleColor: inherit;
	ItemSubtitleTextSize: inherit;
	ItemLabelIconMargin: 0.25rem;
}

:vars {
	ViewPortShadow: none;
}

.root {
	-st-extends: Menu;
}

.root::arrow {
	background-color: value(ArrowColor);
}

.root::viewport {
	background-color: value(ViewPortBgColor);
	box-shadow: value(ViewPortShadow);
}

.root::list {
	background-color: value(ListBgColor);
}

.root::more {
	-st-mixin: ButtonMixin(
		ButtonTextColor value(ItemTextColor),
		ButtonTextColor_Hover value(ItemTextColor_Hover),
		ButtonPadding 0
	);
	margin-top: 1rem;
	display: inline !important;
}

.root::menuTrigger {
	border-radius: value(TriggerRadius);
}
.root::menuTrigger[data-state="open"] {
	color: value(TriggerTextColor_Hover);
	background-color: value(TriggerBgColorHover);
}

.root::menuTrigger[data-state="open"] > * {
	color: value(TriggerTextColor_Hover);
}

.root::triggerButton {
	-st-mixin: ButtonMixin(
		ButtonPadding value(TriggerPadding),
		/* ButtonLabelLineHeight value(TriggerLabelLineHeight), */
		ButtonTextColor value(TriggerTextColor),
	);
}

.root::menuItemButton {
	border-radius: value(ItemRadius);
}
.root::menuItemButton {
	color: value(ItemTextColor);
	line-height: value(ItemLabelLineHeight);
}
.root::menuItemButton:hover {
	background-color: value(ItemBgColor_Hover);
	color: value(ItemTextColor_Hover);
}
.root::menuItemButton::children{
	font-size: 0.85rem;
}
